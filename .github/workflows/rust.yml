name: Test

on:
  pull_request:
  workflow_dispatch:

jobs:
  stable_rustc_1_51:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.51.0
        profile: minimal
        override: true
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run tests feature old_rust
      run: cargo test --verbose --features=old_rust
    - name: Run tests-extra
      run: |
        cd tests-extra
        cargo test --features=invalid_programs --verbose
    - name: Run tests-extra no_std_lib
      run: |
        cd tests-extra/no_std_lib
        cargo test --verbose
    - name: Run examples
      run: |
        cd examples
        cargo run --verbose --bin fallible_dependent_construction
        cargo run --verbose --bin lazy_ast
        cargo run --verbose --bin owner_with_lifetime
        cargo run --verbose --bin mut_ref_to_owner_in_builder
    - name: Build benchmarks
      run: |
        cd benchmarks
        cargo build --release --verbose

  old_rust_rustc_1_36:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.36.0
        profile: minimal
        override: true
    - name: Run tests
      run: cargo test --verbose --features=old_rust --test self_cell
  
  nigthly_miri:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup miri
      run: |
        MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
        echo "Installing latest nightly with Miri: $MIRI_NIGHTLY"
        rustup set profile minimal
        rustup default "$MIRI_NIGHTLY"
        rustup component add miri
      shell: bash

    - name: Run basic tests with nightly
      run: |
        cargo test --verbose
        cargo test --verbose --release
    - name: Run newer Rust version tests with nightly
      run: |
        cd tests-extra/rust_1_85_or_newer
        cargo test --verbose
        cargo test --verbose --release
    - name: Run examples with nightly
      run: |
        cd examples
        cargo run --verbose --bin fallible_dependent_construction
        cargo run --verbose --bin lazy_ast
        cargo run --verbose --bin owner_with_lifetime
        cargo run --verbose --bin mut_ref_to_owner_in_builder
        cargo run --verbose --bin async_builder
    - name: Run tests x86_64-unknown-linux-gnu
      run: |
        cargo miri test --verbose --target x86_64-unknown-linux-gnu
    - name: Run tests-extra x86_64-unknown-linux-gnu
      run: |
        cd tests-extra
        cargo miri test --verbose --target x86_64-unknown-linux-gnu
    - name: Run examples x86_64-unknown-linux-gnu
      run: |
        cd examples
        cargo miri run --verbose --target x86_64-unknown-linux-gnu --bin fallible_dependent_construction
        cargo miri run --verbose --target x86_64-unknown-linux-gnu --bin lazy_ast
        cargo miri run --verbose --target x86_64-unknown-linux-gnu --bin owner_with_lifetime

    - name: Run tests mips64-unknown-linux-gnuabi64
      run: |
        cargo miri test --verbose --target mips64-unknown-linux-gnuabi64
    - name: Run tests-extra mips64-unknown-linux-gnuabi64
      run: |
        cd tests-extra
        cargo miri test --verbose --target mips64-unknown-linux-gnuabi64
    - name: Run examples mips64-unknown-linux-gnuabi64
      run: |
        cd examples
        cargo miri run --verbose --target mips64-unknown-linux-gnuabi64 --bin fallible_dependent_construction
        cargo miri run --verbose --target mips64-unknown-linux-gnuabi64 --bin lazy_ast
        cargo miri run --verbose --target mips64-unknown-linux-gnuabi64 --bin owner_with_lifetime

